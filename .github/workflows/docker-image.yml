# 工作流名称
name: Build and Push Docker Image to GHCR

# 触发条件
on:
  push:
    branches: [ "main" ]

# 环境变量
env:
  # 注意：这里我们只定义了基础镜像名，不包含 ghcr.io 前缀
  # metadata-action 会为我们处理注册表地址
  IMAGE_NAME: ${{ github.repository }}

# 工作流中的任务
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- 核心改动在这里 ---
      # 步骤4: 提取 Docker 元数据 (自动处理大小写)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 指定镜像仓库为 ghcr.io，并使用小写格式的镜像名
          images: ghcr.io/${{ env.IMAGE_NAME }}

      # 步骤5: 使用处理过的元数据进行构建和推送
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # 使用 metadata action 的输出作为标签和元信息
          # 这将包含一个 latest 标签和一个基于 Git 的唯一标签，且均为小写
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
