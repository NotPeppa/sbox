name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  # 先构建amd64架构
  build-amd64:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get repository owner
        id: get-owner
        run: |
          OWNER=$(echo ${{ github.repository }} | cut -d '/' -f 1 | tr '[:upper:]' '[:lower:]')
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          
      - name: Build and push amd64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-amd64:latest
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-amd64:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 再构建其他架构
  build-other-archs:
    runs-on: ubuntu-latest
    needs: build-amd64
    timeout-minutes: 120
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get repository owner
        id: get-owner
        run: |
          OWNER=$(echo ${{ github.repository }} | cut -d '/' -f 1 | tr '[:upper:]' '[:lower:]')
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          
      - name: Get version tag
        id: get-version
        run: |
          VERSION="${{ github.ref_name }}"
          if [[ "$VERSION" != v* ]]; then
            VERSION="latest"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push arm64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-arm64:latest
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-arm64:${{ github.sha }}
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-arm64:${{ steps.get-version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push armv7 Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-arm:latest
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-arm:${{ github.sha }}
            ghcr.io/${{ steps.get-owner.outputs.owner }}/sbox-arm:${{ steps.get-version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 